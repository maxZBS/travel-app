"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PlaceholderText = PlaceholderText;

var _react = _interopRequireDefault(require("react"));

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PlaceholderText(props) {
  var hoveringFiles = props.hoveringFiles,
      type = props.type,
      readOnly = props.readOnly,
      acceptedFiles = props.acceptedFiles,
      rejectedFilesCount = props.rejectedFilesCount,
      directUploads = props.directUploads;
  var isFileType = type === 'file';

  function MessageIcon() {
    if (readOnly) {
      return /*#__PURE__*/_react.default.createElement(_icons.ReadOnlyIcon, null);
    }

    if (hoveringFiles && rejectedFilesCount > 0 || !directUploads) {
      return /*#__PURE__*/_react.default.createElement(_icons.AccessDeniedIcon, null);
    }

    return isFileType ? /*#__PURE__*/_react.default.createElement(_icons.BinaryDocumentIcon, null) : /*#__PURE__*/_react.default.createElement(_icons.ImageIcon, null);
  }

  function MessageText() {
    var message = "Drag or paste ".concat(type, " here");

    if (!directUploads) {
      message = "Can't upload files here";
    }

    if (readOnly) {
      message = 'Read only';
    }

    if (hoveringFiles && directUploads && !readOnly) {
      if (acceptedFiles.length > 0) {
        message = "Drop to upload ".concat(type);
      }

      if (rejectedFilesCount > 0) {
        message = "Can't upload ".concat(rejectedFilesCount, " file").concat(rejectedFilesCount > 1 ? 's' : '', " here");
      }
    }

    return /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1,
      muted: true
    }, message);
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    justify: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true
  }, /*#__PURE__*/_react.default.createElement(MessageIcon, null))), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    justify: "center"
  }, /*#__PURE__*/_react.default.createElement(MessageText, null)));
}